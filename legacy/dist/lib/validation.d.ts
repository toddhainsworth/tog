export declare const TimeEntrySchema: import("arktype/internal/methods/object.ts").ObjectType<{
    at: string;
    duration: number;
    id: number;
    start: string;
    workspace_id: number;
    billable?: boolean | undefined;
    client_name?: string | undefined;
    description?: string | undefined;
    duronly?: boolean | undefined;
    pid?: number | undefined;
    project_active?: boolean | undefined;
    project_billable?: boolean | undefined;
    project_color?: string | undefined;
    project_id?: number | null | undefined;
    project_name?: string | undefined;
    server_deleted_at?: string | null | undefined;
    stop?: string | null | undefined;
    tag_ids?: number[] | null | undefined;
    tags?: string[] | null | undefined;
    task_id?: number | null | undefined;
    uid?: number | undefined;
    user_id?: number | undefined;
    wid?: number | undefined;
}, {}>;
export declare const WorkspaceSchema: import("arktype/internal/methods/object.ts").ObjectType<{
    id: number;
    name: string;
    organization_id?: number | undefined;
}, {}>;
export declare const ProjectSchema: import("arktype/internal/methods/object.ts").ObjectType<{
    active: boolean;
    id: number;
    name: string;
    workspace_id: number;
    client_name?: string | undefined;
    color?: string | undefined;
}, {}>;
export declare const TaskSchema: import("arktype/internal/methods/object.ts").ObjectType<{
    active: boolean;
    id: number;
    name: string;
    project_id?: number | undefined;
}, {}>;
export declare const ClientSchema: import("arktype/internal/methods/object.ts").ObjectType<{
    id: number;
    name: string;
}, {}>;
export declare const UserSchema: import("arktype/internal/methods/object.ts").ObjectType<{
    id: number;
    email?: string | undefined;
    fullname?: string | undefined;
}, {}>;
export declare const WorkspacesArraySchema: import("arktype/internal/methods/array.ts").ArrayType<{
    id: number;
    name: string;
    organization_id?: number | undefined;
}[], {}>;
export declare const ProjectsArraySchema: import("arktype/internal/methods/array.ts").ArrayType<{
    active: boolean;
    id: number;
    name: string;
    workspace_id: number;
    client_name?: string | undefined;
    color?: string | undefined;
}[], {}>;
export declare const TasksArraySchema: import("arktype/internal/methods/array.ts").ArrayType<{
    active: boolean;
    id: number;
    name: string;
    project_id?: number | undefined;
}[], {}>;
export declare const ClientsArraySchema: import("arktype/internal/methods/array.ts").ArrayType<{
    id: number;
    name: string;
}[], {}>;
export declare const TimeEntriesArraySchema: import("arktype/internal/methods/array.ts").ArrayType<{
    at: string;
    duration: number;
    id: number;
    start: string;
    workspace_id: number;
    billable?: boolean | undefined;
    client_name?: string | undefined;
    description?: string | undefined;
    duronly?: boolean | undefined;
    pid?: number | undefined;
    project_active?: boolean | undefined;
    project_billable?: boolean | undefined;
    project_color?: string | undefined;
    project_id?: number | null | undefined;
    project_name?: string | undefined;
    server_deleted_at?: string | null | undefined;
    stop?: string | null | undefined;
    tag_ids?: number[] | null | undefined;
    tags?: string[] | null | undefined;
    task_id?: number | null | undefined;
    uid?: number | undefined;
    user_id?: number | undefined;
    wid?: number | undefined;
}[], {}>;
export declare const WorkspaceSelectionSchema: import("arktype/internal/methods/string.ts").StringType<string, {}>;
export declare const TimerDescriptionSchema: import("arktype/internal/methods/string.ts").StringType<string, {}>;
export declare const SearchQuerySchema: import("arktype/internal/methods/string.ts").StringType<string, {}>;
export declare const ApiTokenSchema: import("arktype/internal/methods/string.ts").StringType<string, {}>;
export declare const WorkspaceIdSchema: import("arktype/internal/methods/number.ts").NumberType<number, {}>;
export declare const ConfigSchema: import("arktype/internal/methods/object.ts").ObjectType<{
    apiToken: string;
    workspaceId: number;
}, {}>;
export declare const SearchTimeEntriesPayloadSchema: import("arktype/internal/methods/object.ts").ObjectType<{
    description?: string | undefined;
    end_date?: string | undefined;
    page_size?: number | undefined;
    start_date?: string | undefined;
}, {}>;
export declare const ReportsTimeEntrySchema: import("arktype/internal/methods/object.ts").ObjectType<{
    at: string;
    id: number;
    seconds: number;
    start: string;
    stop: string | null;
    at_tz?: string | undefined;
    time_end?: string | null | undefined;
    time_start?: string | undefined;
    workspace_id?: number | undefined;
}, {}>;
export declare const ReportsGroupedEntrySchema: import("arktype/internal/methods/object.ts").ObjectType<{
    row_number: number;
    time_entries: {
        at: string;
        id: number;
        seconds: number;
        start: string;
        stop: string | null;
        at_tz?: string | undefined;
        time_end?: string | null | undefined;
        time_start?: string | undefined;
        workspace_id?: number | undefined;
    }[];
    user_id: number;
    billable?: boolean | undefined;
    billable_amount_in_cents?: number | null | undefined;
    currency?: string | undefined;
    description?: string | undefined;
    hourly_rate_in_cents?: number | null | undefined;
    project_id?: number | null | undefined;
    tag_ids?: number[] | null | undefined;
    task_id?: number | null | undefined;
    username?: string | undefined;
}, {}>;
export declare const ReportsSearchResponseSchema: import("arktype/internal/methods/array.ts").ArrayType<{
    row_number: number;
    time_entries: {
        at: string;
        id: number;
        seconds: number;
        start: string;
        stop: string | null;
        at_tz?: string | undefined;
        time_end?: string | null | undefined;
        time_start?: string | undefined;
        workspace_id?: number | undefined;
    }[];
    user_id: number;
    billable?: boolean | undefined;
    billable_amount_in_cents?: number | null | undefined;
    currency?: string | undefined;
    description?: string | undefined;
    hourly_rate_in_cents?: number | null | undefined;
    project_id?: number | null | undefined;
    tag_ids?: number[] | null | undefined;
    task_id?: number | null | undefined;
    username?: string | undefined;
}[], {}>;
export declare const FavoriteSchema: import("arktype/internal/methods/object.ts").ObjectType<{
    billable?: boolean | undefined;
    client_name?: string | undefined;
    created_at?: string | undefined;
    deleted_at?: string | null | undefined;
    description?: string | undefined;
    favorite_id?: number | undefined;
    permissions?: string[] | null | undefined;
    project_active?: boolean | undefined;
    project_billable?: boolean | undefined;
    project_color?: string | undefined;
    project_id?: number | null | undefined;
    project_name?: string | undefined;
    public?: boolean | undefined;
    rank?: number | undefined;
    tag_ids?: number[] | null | undefined;
    tags?: string[] | null | undefined;
    task_id?: number | null | undefined;
    task_name?: string | undefined;
}, {}>;
export declare const FavoritesArraySchema: import("arktype/internal/methods/array.ts").ArrayType<{
    billable?: boolean | undefined;
    client_name?: string | undefined;
    created_at?: string | undefined;
    deleted_at?: string | null | undefined;
    description?: string | undefined;
    favorite_id?: number | undefined;
    permissions?: string[] | null | undefined;
    project_active?: boolean | undefined;
    project_billable?: boolean | undefined;
    project_color?: string | undefined;
    project_id?: number | null | undefined;
    project_name?: string | undefined;
    public?: boolean | undefined;
    rank?: number | undefined;
    tag_ids?: number[] | null | undefined;
    tags?: string[] | null | undefined;
    task_id?: number | null | undefined;
    task_name?: string | undefined;
}[], {}>;
export type TimeEntry = typeof TimeEntrySchema.infer;
export type Workspace = typeof WorkspaceSchema.infer;
export type Project = typeof ProjectSchema.infer;
export type Task = typeof TaskSchema.infer;
export type Client = typeof ClientSchema.infer;
export type User = typeof UserSchema.infer;
export type Favorite = typeof FavoriteSchema.infer;
